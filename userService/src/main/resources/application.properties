app.name=USER-SERVICE
server.port=${serverport}
spring.application.name=USER-SERVICE
eureka.instance.appname=USER-SERVICE
eureka.instance.prefer-ip-address=false
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
eureka.client.service-url.defaultZone=http://my-eureka-server.com:9000/eureka

logging.config=src/main/resources/log4j.properties
logging.level.tk.mybatis=TRACE

# https://www.cnblogs.com/liduanwen/p/7353517.html
# DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)
spring.datasource.dbType=mysql
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.url=jdbc:mysql://${mysqlhost}:${mysqlport}/${dbname}?useUnicode=true&characterEncoding=utf8&autoReconnect=true
spring.datasource.username=${mysqluser}
spring.datasource.password=${mysqlpwd}
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.name=druid
# 连接池的配置信息
# 初始化大小，最小，最大
spring.datasource.initialSize=5
spring.datasource.minIdle=5
spring.datasource.maxActive=20
# 配置获取连接等待超时的时间
spring.datasource.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.minEvictableIdleTimeMillis=300000
spring.datasource.validationQuery=SELECT 1 FROM DUAL
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.poolPreparedStatements=true
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.filters=stat,wall,log4j
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000

#jpa设置
spring.jpa.database=mysql
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=update

# 下面为连接池的补充设置，应用到上面所有数据源中
spring.datasource.druid.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.druid.url=jdbc:mysql://${mysqlhost}:${mysqlport}/${dbname}?useUnicode=true&characterEncoding=utf8&autoReconnect=true
spring.datasource.druid.username=${mysqluser}
spring.datasource.druid.password=${mysqlpwd}
spring.datasource.druid.driver-class-name=com.mysql.cj.jdbc.Driver
# 初始化大小，最小，最大
spring.datasource.druid.initial-size=5
spring.datasource.druid.min-idle=5
spring.datasource.druid.max-active=20
# 配置获取连接等待超时的时间
spring.datasource.druid.max-wait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.druid.time-between-eviction-runs-millis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.druid.min-evictable-idle-time-millis=300000
spring.datasource.druid.validation-query=SELECT 1
spring.datasource.druid.test-while-idle=true
spring.datasource.druid.test-on-borrow=false
spring.datasource.druid.test-on-return=false
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.druid.pool-prepared-statements=true
spring.datasource.druid.max-pool-prepared-statement-per-connection-size=20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.druid.filters=stat,wall,log4j
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.druid.connection-properties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
# 合并多个DruidDataSource的监控数据
spring.datasource.druid.use-global-data-source-stat=true

spring.http.multipart.maxFileSize=2Mb
spring.http.multipart.maxRequestSize=2Mb

mybatis.type-aliases-package=com.example.demo.model
mybatis.mapper-locations: classpath:com.example.demo.mapper.*

mapper.plugin=tk.mybatis.mapper.generator.MapperPlugin
mapper.Mapper=com.example.demo.mapper.*
mapper.not-empty=false
mapper.identity=MYSQL

pagehelper.helperDialect=mysql
pagehelper.reasonable=true
pagehelper.supportMethodsArguments=true
pagehelper.params=count=countSql

#嵌入tomcat配置
#server.tomcat.port=8888
#和CPU数
#server.tomcat.acceptorThreadCount=4
#server.tomcat.minSpareThreads=50
#erver.tomcat.maxSpareThreads=50
#server.tomcat.maxThreads=1000
#server.tomcat.maxConnections=10000
#10秒超时
#server.tomcat.connectionTimeout=10000
#server.tomcat.protocol=org.apache.coyote.http11.Http11Nio2Protocol
#server.tomcat.redirectPort=443
#server.tomcat.compression=on
#文件请求大小
#server.tomcat.location=f:\\
#server.tomcat.MaxFileSize=300MB
#server.tomcat.MaxRequestSize=500MB
#server.tomcat.fileSizeThreshold=0

###Customized configuration start###
#Kubernetes settings
k8s.url.host=${k8s_url_host}
k8s.url.port=${k8s_url_port}
k8s.msport=8888
k8s.slaves=${k8s_slaves}
k8s.rc=1
k8s.registry.host=${k8s_registry_host}
k8s.registry.port=${k8s_registry_port}

#Cluster settings
cluster.maxretry=${max_retry}
cluster.cap.recommend=${cap_recommend}
cluster.cap.overflow=${cap_overflow}
cluster.cap.aioverflow=${ai_overflow}

cluster.num.min=${num_min}
cluster.num.max=${num_max}
cluster.cpu.min=${cpu_min}
cluster.cpu.max=${cpu_max}
cluster.memory.min=${memory_min}
cluster.memory.max=${memory_max}

#Docker settings
docker.image.version=2.0
docker.registry.host=${docker_registry_host}
docker.registry.port=${docker_registry_port}
docker.registry.username=${docker_registry_username}
docker.registry.password=${docker_registry_password}
docker.container.num=${docker_container_num}
docker.container.mount=${docker_container_mount}

docker.container.sshport=22
docker.container.sshuser=root
docker.container.protocol=TCP
docker.container.cpu=${docker_container_cpu}
docker.container.memory=${docker_container_memory}
docker.container.ubuntuDesktopMemory=${docker_ubuntu-desktop_container_memory}
docker.container.notebookMemory=${docker_notebook_container_memory}
docker.container.aiMemory=${docker_ai_container_memory}

docker.container.gpu=${docker_container_gpu}

#File settings
file.path=${file_path}
file.basePath=${base_path_absolute}
file.baseUrl=${base_path_relative}
file.reportImgPath=${report_img_path_absolute}
file.reportImgUrl=${report_img_path_relative}
#file.imgpath=${img_path_relative}
file.customExpPath=${custom_exp_path_absolute}
file.customExpUrl=${custom_exp_path_relative}
file.pdfPath=${pdf_path_absolute}
file.pdfUrl=${pdf_path_relative}
file.toolsPath=${tools_path_absolute}
file.toolsUrl=${tools_path_relative}
file.kejianPath=${kejian_path_absolute}
file.kejianUrl=${kejian_path_relative}
file.customExpApacheHttpPrefixPath=${custom_exp_apache_http_prefix_path}
###Customized configuration end###

spring.cache.type=ehcache
spring.cache.ehcache.config=classpath:ehcache.xml

#uploadFileSize start
spring.http.multipart.maxFileSize=${max_file_size}
spring.http.multipart.maxRequestSize=${max_request_size}
#uploadFileSize end

#software version
version.version=${version_version}
version.date=${version_date}
version.baseVersion=${version_base_version}
version.plusVersion=${version_plus_version}
version.apiUrlP=${version_apiUrlP}
version.fileUrl=${version_fileUrl}
version.dataminingUrl=${version_dataminingUrl}
version.dataplayUrl=${version_dataplayUrl}
version.about=${version_about}
version.dateUrl=${version_dateUrl}
version.diaoduUrl=${version_diaoduUrl}
version.systemType=${version_systemType}
version.name=${version_name}
version.eduType=${version_eduType}
version.industryType=${version_industryType}
version.copyright=${version_copyright}
version.contact=${version_contact}
version.testaddmode=${version_testaddmode}
version.themestyle=${version_themestyle}
version.freeUrl=${version_freeurl}
version.school=${version_school}
